package stateHandlers

import Client
import ClientsRepository
import api.vk.VKApiClient
import keyboards.HasCompetitionKeyboard
import keyboards.MainActivityKeyboard
import kotlinx.coroutines.async
import kotlinx.coroutines.coroutineScope

class ActiveClientHandler(
    private val clientsRepository: ClientsRepository,
    private val vkApiClient: VKApiClient
) : StateHandler(clientsRepository, vkApiClient) {

    override suspend fun handle(client: Client, text: String): Unit = coroutineScope {
        if (text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ü–∏–∫–ª") {
            val phrases = listOf(
                "–û—Ç–ª–∏—á–Ω–æ üî•\n–î–∞–≤–∞–π—Ç–µ —Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–ª–∞–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é!",
                "–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞ üí™\n–î–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–º –ø–ª–∞–Ω–æ–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é!",
                "–ù–µ–¥–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω üòé\n–¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é!"
            )
            vkApiClient.sendMessageSafely(
                client.id,
                phrases.random()
            )
            async { clientsRepository.update(
                client.id,
                newStatus = Status.COMPLETING_INTERVIEW0,
                newWeeksPassed = client.weeksPassed + 1
            ) }
            async { sendFirstQuestion(client) }
        } else {
            vkApiClient.sendMessageSafely(
                client.id,
                "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –Ω–∞–∂–º–∏—Ç–µ \"–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ü–∏–∫–ª\". –ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ \"–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\"."
            )
        }
    }

    private suspend fun sendFirstQuestion(client: Client) {
        if (client.hasCompetition) {
            vkApiClient.sendMessageSafely(
                client.id,
                "–ü—Ä–æ–±–µ–∂–∞–ª–∏ –ª–∏ –í—ã —Å—Ç–∞—Ä—Ç?",
                keyboard = HasCompetitionKeyboard().keyboard
            )
        }
        vkApiClient.sendMessageSafely(
            client.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–∏–ø–∞—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∞ —Ç–∞–∫–∂–µ —Å–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É, –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.",
            keyboard = MainActivityKeyboard().keyboard
        )
    }
}
