package stateHandlers

import client.Client
import ClientsRepository
import api.vk.VKApiClient
import client.Status
import keyboards.AlrightKeyboard
import keyboards.MainKeyboardBeforePayment
import keyboards.PrimaryActivityKeyboard
import kotlinx.coroutines.async
import kotlinx.coroutines.coroutineScope


class NewClientHandler(
    private val clientsRepository: ClientsRepository,
    private val vkApiClient: VKApiClient
) : StateHandler() {

    override suspend fun handle(client: Client, text: String): Unit = coroutineScope {
        if (text == "–°—Ç–∞—Ä—Ç!") {
            sendMainKeyboardBeforePayment(client.id)
        }
        else if (text == "–í—Å–µ –ø–æ–Ω—è—Ç–Ω–æ!") {
            async { sendSelectTrainingPlan(client.id) }
            async { clientsRepository.update(
                client.id,
                newStatus = Status.WAITING_FOR_PLAN
            ) }
        }
    }

    private suspend fun sendMainKeyboardBeforePayment(peerId: Int) {
        vkApiClient.sendMessageSafely(
            peerId,
            "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏:\n" +
                    " üîπ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏\n" +
                    " üîπ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: –ø–æ–æ–±—â–∞–π—Ç–µ—Å—å —Å —Ä–µ–∞–ª—å–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º, –µ—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã\n" +
                    " üîπ –í–∏–¥–µ–æ: —Å—Ç–∞—Ç—å—è —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –≤–∏–¥–µ–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π\n" +
                    " üîπ –ù–∞—á–∞—Ç—å / –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ü–∏–∫–ª: —Å –Ω–∏–º–∏ –í—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å –ø–æ–∑–∂–µ\n." +
                    "–í–∞–∂–Ω–æ: —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–≤–µ—Ä–Ω—É—Ç—å –∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∑–Ω–∞—á–æ–∫ –Ω–∞ –∫—Ä–∞—é –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!",
            keyboard = MainKeyboardBeforePayment().getKeyboard()
        )
        vkApiClient.sendMessageSafely(
            peerId,
            "–ò–Ω–æ–≥–¥–∞ —Ç–∞–∫–∂–µ –Ω–∞–¥–æ –±—É–¥–µ—Ç –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä—è–º–æ –≤–Ω—É—Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. " +
                    "–ù–∞–ø—Ä–∏–º–µ—Ä, —Å–µ–π—á–∞—Å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ –í—ã –≤—Å–µ –ø–æ–Ω—è–ª–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
            keyboard = AlrightKeyboard().getKeyboard()
        )
    }

    private suspend fun sendSelectTrainingPlan(peerId: Int) {
        vkApiClient.sendMessageSafely(
            peerId,
            "–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –í–∞—à–∏–º –ø–µ—Ä–≤—ã–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–º –ø–ª–∞–Ω–æ–º!\n" +
                    "–°–µ–π—á–∞—Å –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã 5 –æ–ø—Ü–∏–π, –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –µ—â–µ 2 –≤–∏–¥–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.\n" +
                    "–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É –í—ã –≤—Å–µ–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n" +
                    "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â—É—é —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É.",
            keyboard = PrimaryActivityKeyboard().getKeyboard()
        )
    }
}


