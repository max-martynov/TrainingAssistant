package stateHandlers

import Client
import ClientsRepository
import Status
import TrainingPlan
import TrainingPlansRepository
import api.qiwi.QiwiApiClient
import api.vk.VKApiClient
import kotlinx.coroutines.async
import kotlinx.coroutines.coroutineScope


class CompletingInterview0Handler(
    private val clientsRepository: ClientsRepository,
    private val trainingPlansRepository: TrainingPlansRepository,
    private val vkApiClient: VKApiClient,
    private val qiwiApiClient: QiwiApiClient
) : CompletingInterviewHandler(clientsRepository, trainingPlansRepository, vkApiClient, qiwiApiClient) {

    override suspend fun handle(client: Client, text: String): Unit = coroutineScope {
        if (client.hasCompetition) {
            when (text) {
                "Да" -> {
                    async {
                        clientsRepository.update(
                            client.id,
                            newTrainingPlan = trainingPlansRepository.getTrainingPlan(client, 0, 0))
                    }
                    checkIfTrial(client)
                }
                "Нет" -> {
                    async {
                        clientsRepository.update(
                            client.id,
                            newTrainingPlan = TrainingPlan(0, 0, "")
                        )
                    }
                    async {
                        vkApiClient.sendMessageSafely(
                            client.id,
                            "Как бы Вы хотели тренироваться на этой неделе? Подробнее о типах тренировок, а также советы по выбору, Вы всегда можете найти в инструкции."
                        )
                    }
                }
            }
        }
        else {
            when (text) {
                "Лыжи" -> {
                    async {
                        clientsRepository.update(
                            client.id,
                            newStatus = Status.COMPLETING_INTERVIEW1,
                        )
                    }
                    async {
                        askHours(client)
                    }
                }
                "Бег" -> {
                    async {
                        clientsRepository.update(
                            client.id,
                            newStatus = Status.COMPLETING_INTERVIEW2
                        )
                    }
                    async {
                        askHours(client)
                    }
                }
                "OФП" -> {
                    clientsRepository.update(
                        client.id,
                        newTrainingPlan = trainingPlansRepository.getTrainingPlan(client, 2, 0)
                    )
                    checkIfTrial(client)
                }
                "Восстановление" -> {
                    clientsRepository.update(
                        client.id,
                        newTrainingPlan = trainingPlansRepository.getTrainingPlan(client, 3, 0)
                    )
                    checkIfTrial(client)
                }
                "Подводка к старту" -> {
                    async {
                        clientsRepository.update(
                            client.id,
                            newStatus = Status.COMPLETING_INTERVIEW3
                        )
                        if (client.trainingPlan.duration > 1) {
                            clientsRepository.update(
                                client.id,
                                newTrainingPlan = TrainingPlan(
                                    client.trainingPlan.activityType,
                                    0,
                                    ""
                                )
                            )
                        }
                    }
                    async {
                        askDay(client)
                    }
                }
                else -> {
                    vkApiClient.sendMessageSafely(
                        client.id,
                        "Выберите, пожалуйста, один из предложенных вариантов ответа. Если у Вас возникли вопросы, нажмите \"Обратная связь\"."
                    )
                }
            }
        }
    }
}