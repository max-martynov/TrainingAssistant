package eventHandlers

import Client
import ClientsRepository
import Status
import TrainingPlansRepository
import api.qiwi.QiwiApiClient
import api.vk.*
import keyboards.MainKeyboardWithPromocodes
import kotlinx.coroutines.async
import kotlinx.coroutines.coroutineScope

class MessageEventHandler(
    private val clientsRepository: ClientsRepository,
    private val vKApiClient: VKApiClient,
    private val trainingPlansRepository: TrainingPlansRepository,
    private val qiwiApiClient: QiwiApiClient
) {
    suspend fun checkPayment(messageEvent: MessageEvent) = coroutineScope {
        val client = clientsRepository.findById(messageEvent.userId) ?: return@coroutineScope
        if (client.status != Status.WAITING_FOR_PAYMENT) {
            vKApiClient.sendMessageEventAnswerSafely(messageEvent, getShowSnackbarString("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –•–æ—Ä–æ—à–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!"))
        } else if (qiwiApiClient.isBillPaid(client.billId)) {
            sendThanks(client)
            confirmPayment(client, messageEvent)
        } else {
            vKApiClient.sendMessageEventAnswerSafely(
                messageEvent,
                getShowSnackbarString("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–µ –æ–± –æ–ø–ª–∞—Ç–µ –µ—â–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            )
        }
    }

    private suspend fun confirmPayment(client: Client, messageEvent: MessageEvent?) {
        val phrase =
            if (client.trial)
                "–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ."
            else
                "–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ù–∞–¥–µ—é—Å—å, –í–∞–º –ø–æ–Ω—Ä–∞–≤—è—Ç—Å—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ."
        updateClient(client)
        if (messageEvent != null)
            vKApiClient.sendMessageEventAnswerSafely(messageEvent, getShowSnackbarString(phrase))
    }

    private suspend fun updateClient(client: Client) {
        if (client.trial) { // for clients after trial
            clientsRepository.update(
                client.id,
                newTrial = false,
                newStatus = Status.WAITING_FOR_START,
                newWeeksPassed = 0,
                newDaysPassed = 0
            )
        } else if (client.previousStatus == Status.WAITING_FOR_RESULTS && client.completedInterview()) { // for those who completed month too fast
            clientsRepository.update(
                client.id,
                newWeeksPassed = 0,
                newDaysPassed = 0
            )
            val updatedClient = clientsRepository.findById(client.id)!!
            clientsRepository.update(
                client.id,
                newStatus = Status.WAITING_FOR_START,
                newTrainingPlan = trainingPlansRepository.determineNextTrainingPlan(updatedClient),
                newInterviewResults = mutableListOf()
            )
        } else { // for usual clients
            clientsRepository.update(
                client.id,
                newStatus = client.previousStatus,
                newDaysPassed = 0,
                newWeeksPassed = 0
            )
        }
    }

    private fun getShowSnackbarString(text: String): String =
        """
        {
            "type": "show_snackbar", 
            "text": "$text"
        }
    """.trimIndent()

    private suspend fun sendThanks(client: Client) {
        if (client.trial) {
            vKApiClient.sendMessageSafely(
                client.id,
                "–í–ø–µ—Ä–µ–¥–∏ –º–µ—Å—è—Ü –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫! –ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å 28 –¥–Ω–µ–π –∏ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–≤–Ω–æ 4 –ø–ª–∞–Ω–∞.\n" +
                        "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –Ω–∞–∂–º–∏—Ç–µ \"–ù–∞—á–∞—Ç—å —Ü–∏–∫–ª\" (–µ—Å–ª–∏ –í—ã –Ω–µ –≤–∏–¥–∏—Ç–µ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—É—Ç—å –ø—Ä–∞–≤–µ–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è).\n" +
                        "–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –í–∞–º —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–æ–º–æ–∫–æ–¥—ã üéÅ",
                keyboard = MainKeyboardWithPromocodes().keyboard
            )
        }
        else {
            vKApiClient.sendMessageSafely(
                client.id,
                "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏! –ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å 28 –¥–Ω–µ–π –∏ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–≤–Ω–æ 4 –ø–ª–∞–Ω–∞.\n" +
                        "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –Ω–∞–∂–º–∏—Ç–µ \"–ù–∞—á–∞—Ç—å —Ü–∏–∫–ª\".\n"
            )
        }
    }
}