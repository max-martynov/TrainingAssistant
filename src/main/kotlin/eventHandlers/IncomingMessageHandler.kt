package eventHandlers

import Client
import ClientsRepository
import Status
import TrainingPlansRepository
import api.qiwi.QiwiApiClient
import api.vk.*
import com.petersamokhin.vksdk.core.model.event.IncomingMessage
import keyboards.PressStartKeyboard
import kotlinx.coroutines.*
import kotlinx.serialization.decodeFromString
import kotlinx.serialization.json.Json
import stateHandlers.*
import java.lang.management.ManagementFactory


class IncomingMessageHandler(
    private val clientsRepository: ClientsRepository,
    private val vKApiClient: VKApiClient,
    private val trainingPlansRepository: TrainingPlansRepository,
    private val qiwiApiClient: QiwiApiClient
) {
    private val productId = 8 // 803 for Fake Community

    suspend fun receiveMessage(incomingMessage: IncomingMessage) {
        val clientId = incomingMessage.fromId
        val text = incomingMessage.text
        val attachments = incomingMessage.attachments

        println("Current number of threads = ${ManagementFactory.getThreadMXBean().threadCount}")

        val client = clientsRepository.findById(clientId)

        if (client == null && attachments.isNotEmpty() && isOurProduct(attachments[0].toString())) {
            registerNewClient(clientId)
        }
        else if (client != null) {
            getAppropriateHandler(client).handle(client, text)
        }
    }

    private fun isOurProduct(attachment: String): Boolean {
        return Json { ignoreUnknownKeys = true }.decodeFromString<Attachment>(attachment).type == "market" &&
                Json {
                    ignoreUnknownKeys = true
                }.decodeFromString<MarketAttachment>(attachment).market.category.id == productId
    }

    private suspend fun registerNewClient(clientId: Int): Unit = coroutineScope {
        async { clientsRepository.add(Client(clientId)) }
        async { sendGreetings(clientId) }
    }

    private suspend fun sendGreetings(peerId: Int) {
        vKApiClient.sendMessageSafely(
            peerId,
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ ü§ñ\n" +
                    "üîπ –ï—Å–ª–∏ —É –í–∞—Å –≤–Ω–∏–∑—É –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏ \"–°—Ç–∞—Ä—Ç\" –∏ \"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\", –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ —á—É—Ç—å –ø—Ä–∞–≤–µ–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±–µ—â–Ω–∏—è.\n" +
                    "üîπ –ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–æ–º, –∫–∞–∫ —Ç—É—Ç –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∂–º–∏—Ç–µ \"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\".\n" +
                    "üîπ –ï—Å–ª–∏ –∂–µ –í—ã –≤—Å–µ –ø–æ–Ω—è–ª–∏ –∏ –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∏–Ω–∞—Ç—å, –∂–º–∏—Ç–µ \"–°—Ç–∞—Ä—Ç!\".",
            keyboard = PressStartKeyboard().keyboard
        )
    }

    private fun getAppropriateHandler(client: Client): StateHandler {
        return when(client.status) {
            Status.NEW_CLIENT -> NewClientHandler(clientsRepository, vKApiClient)
            Status.WAITING_FOR_PLAN -> WaitingForPlanHandler(clientsRepository, vKApiClient)
            Status.WAITING_FOR_START -> WaitingForStartHandler(clientsRepository, vKApiClient, trainingPlansRepository)
            Status.ACTIVE -> ActiveClientHandler(clientsRepository, vKApiClient)
            Status.WAITING_FOR_RESULTS -> WaitingForResultsHandler(clientsRepository, vKApiClient, trainingPlansRepository, qiwiApiClient)
            else -> WaitingForPaymentHandler(clientsRepository, vKApiClient)
        }
    }
}


/**
 * 1. –°–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫ –í–∞—à–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞?
 *  - –£—Å—Ç–∞–ª / —É—Ç–æ–º–∏–ª—Å—è
 *  - –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ
 *  - –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –ª–µ–≥–∫–æ
 * 2. –ù—É–∂–Ω–æ –ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω –ª–µ–≥—á–µ / –º–µ–Ω—å—à–µ?
 *  - –î–∞
 *  - –ù–µ—Ç
 * 3. –ë–æ–ª–µ–ª–∏ –ª–∏ –í—ã –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞?
 *  - –î–∞
 *  - –ù–µ—Ç
 * 4. –ù—É–∂–Ω–æ –ª–∏ –≤–∞–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ? (–≤ —Å–ª—É—á–∞–µ –æ—Ç–≤–µ—Ç–∞ –ù–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å, —Ç—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–≤–µ—Ç –ù–µ—Ç)
 *  - –î–∞
 *  - –ù–µ—Ç
 *
 *
 * –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞: –ù–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥ –æ—Ü–∏–∫–ª–∞, –ó–∞–∫–æ–Ω—á–∏–ª –≤—ã–∞–ø–ª–Ω–µ–∏–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–≤–∞ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
 * –î–µ–Ω—å–≥–∏ —Å–æ–±–∏—Ä–∞—Ç—å –≤—Å–µ–≥–¥–∞ —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π
 * –ú–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –ø–ª–∞–Ω —Ç–æ–ª—å–∫–æ 4 —Ä–∞–∑–∞ –∑–∞ –º–µ—Å—è—Ü
 * –ó–∞–±–∏–≤–∞–µ–º –Ω–∞ 3 —á–∞—Å–∞
 *
 * "action": {
"type": "vkpay",
"payload": "{\"button\": \"1\"}",
"hash": "action=pay-to-user&amount=5&description=aaaa&user_id=15733972&aid=7889001"
}
 *
 *  - –ü—Ä–æ–±–Ω–∞—è –Ω–µ–¥–µ–ª—è
 *  - –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –ø—Ä–æ–º–æ–∫–æ–¥—ã
 *  - 29 –∏—é–ª—è
 *
 *
 */
